<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Jul 29 10:10:10 CDT 2010
  Author:  c88525
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="FndIntghandleSNIFaultTest"
         targetNamespace="http://xmlns.oracle.com/c88525Test_jws/FndIntgHandleSNIFaultIVP/FndIntghandleSNIFaultTest"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:client="http://xmlns.oracle.com/c88525Test_jws/FndIntgHandleSNIFaultIVP/FndIntghandleSNIFaultTest"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.schneider.com/EnterpriseObjects/Core/Common/V1"
         xmlns:sniadf="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIADFExtensionFunctions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:sniolock="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIOptimisticLockExtensionFunctions"
         xmlns:snidttm="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIDateTimeExtensionFunctions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:snifmt="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIFormatExtensionFunctions"
         xmlns:snibpel="http://xmlns.schneider.com/BPEL/sni/foundation/soa/extensions/xpath"
         xmlns:sniprop="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIPropertyFileExtensionFunctions"
         xmlns:sniutil="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.utils.SNIUtilityExtensionFunctions"
         xmlns:snidvm="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIDVMExtensionFunctions"
         xmlns:snixref="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIXRefExtensionFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="fndintghandlesnifaulttest_client_ep"
                     partnerLinkType="client:FndIntghandleSNIFaultTest"
                     myRole="FndIntghandleSNIFaultTestProvider"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:FndIntghandleSNIFaultTestRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:FndIntghandleSNIFaultTestResponseMessage"/>
        <variable name="SNIFault" element="ns1:SNIFault"/>
        <variable name="SNIHeader" element="ns1:SNIHeader"/>
        <variable name="status" type="xsd:string"/>
        <variable name="Reply_process_OutputVariable"
                  messageType="client:FndIntghandleSNIFaultTestResponseMessage"/>
    </variables>
    <faultHandlers>
        <catchAll>
            <sequence name="Sequence1">
                <assign name="HandleSNIFault">
                    <copy>
                        <from expression="snibpel:createAndHandleSNIFault(bpws:getVariableData('SNIHeader'),'FndIntghandleSNIFaultIVP','Generated Flt',string(ora:getFaultAsString()),string('3'),'FndIntghandleSNIFaultIVP')"/>
                        <to variable="SNIFault" query="/ns1:SNIFault"/>
                    </copy>
                    <copy>
                        <from expression="'FndIntgHandleSNIFaultIVP execution completed'"/>
                        <to variable="Reply_process_OutputVariable"
                            part="payload"
                            query="/client:processResponse/client:result"/>
                    </copy>
                </assign>
                <bpelx:exec name="SuccessStmt" version="1.5" language="java">
                    <![CDATA[/*Write your java code below e.g.     
	System.out.println("Hello, World");    
*/    
System.out.println("##CreateAndHandleSNIFault xpath executed ##");]]>
                </bpelx:exec>
                <reply name="Reply" variable="Reply_process_OutputVariable"
                       partnerLink="fndintghandlesnifaulttest_client_ep"
                       portType="client:FndIntghandleSNIFaultTest"
                       operation="process"/>
            </sequence>
        </catchAll>
    </faultHandlers>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in FndIntghandleSNIFaultTest.wsdl) -->
        <receive name="receiveInput"
                 partnerLink="fndintghandlesnifaulttest_client_ep" portType="client:FndIntghandleSNIFaultTest" operation="process" variable="inputVariable" createInstance="yes"/>

        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <assign name="CreateSNIHeader">
            <!--copy>
                <from expression="snibpel:createSNIFault(bpws:getVariableData('SNIHeader'),'TestIVP','Test Fault','HandleSNIFault test process',string('3'),'FndIntghandleSNIFaultIVP')"/>
                <to variable="SNIFault"/>
            </copy-->
            <copy>
                <from expression="snibpel:createSNIHeader('FndIntghandleSNIFaultIVP','SOAIVP','SNIFault','FndIntghandleSNIFault','SOA','')"/>
                <to variable="SNIHeader"/>
            </copy>
        </assign>
        <throw name="Throw_1" faultName="bpelx:invalidVariables"/>
        <assign name="output">
            <copy>
                <from expression="'FndIntgHandleSNIFaultIVP execution completed'"/>
                <to variable="outputVariable" part="payload"
                    query="/client:processResponse/client:result"/>
            </copy>
        </assign>
        <reply name="Replyoutput" variable="outputVariable"
               partnerLink="fndintghandlesnifaulttest_client_ep"
               portType="client:FndIntghandleSNIFaultTest" operation="process"/>
    </sequence>
</process>