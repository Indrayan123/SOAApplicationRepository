<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Aug 04 04:07:34 CDT 2016
  Author:  f23963
  Type: BPEL 1.1 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="FndIntgUMSMailPushNotificationIVP"
               targetNamespace="http://xmlns.schneider.com/SNIFndIntgIVPServices/FndIntgUMSMailProcessIVP/FndIntgUMSMailPushNotificationIVP"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.schneider.com/SNIFndIntgIVPServices/FndIntgUMSMailProcessIVP/FndIntgUMSMailPushNotificationIVP"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/ums/SNIFndIntgIVPServices/FndIntgUMSMailProcessIVP/FndIntgUMSMailPushNotification"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns2="http://platform.integration.oracle/blocks/adapter/fw/metadata/FndIntgUMSMailPushNotification"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:sniadf="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIADFExtensionFunctions"
         xmlns:sniolock="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIOptimisticLockExtensionFunctions"
         xmlns:snifmt="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIFormatExtensionFunctions"
         xmlns:snibpel="http://xmlns.schneider.com/BPEL/sni/foundation/soa/extensions/xpath"
         xmlns:snidb="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIDBExtensionFunctions"
         xmlns:snixml="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIXMLDiffExtensionFunctions"
         xmlns:snidttm="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIDateTimeExtensionFunctions"
         xmlns:snibam="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIBAMExtensionFunctions"
         xmlns:sniprop="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIPropertyFileExtensionFunctions"
         xmlns:snisec="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIEncryptDecryptUtilityExtensionFunctions"
         xmlns:snidvm="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIDVMExtensionFunctions"
         xmlns:sniutil="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.utils.SNIUtilityExtensionFunctions"
         xmlns:snixref="http://www.oracle.com/XSL/Transform/java/sni.foundation.soa.extensions.xpath.SNIXRefExtensionFunctions">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="fndintgumsmailpushnotificationivp_client" partnerLinkType="client:FndIntgUMSMailPushNotificationIVP" myRole="FndIntgUMSMailPushNotificationIVPProvider"/>
    <partnerLink name="FndIntgUMSMailPushNotification"
                 partnerLinkType="ns1:SendNotification_plt"
                 partnerRole="SendNotification_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:FndIntgUMSMailPushNotificationIVPRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:FndIntgUMSMailPushNotificationIVPResponseMessage"/>
    <variable name="InvokeFndIntgUMSMailPushNotification_InputVariable"
              messageType="ns1:SendNotification_msg"/>
    <variable name="InvokeFndIntgUMSMailPushNotification_OutputVariable"
              messageType="ns1:SendNotification_msg_reply"/>
    <variable name="CacheKeyValue" type="xsd:string"/>
    <variable name="CacheUpdatedValue" type="xsd:string"/>
    <variable name="CacheFault" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="ReplyWithFault_OutputVariable"
              messageType="client:FndIntgUMSMailPushNotificationIVPResponseMessage"/>
    <variable name="iCounter" type="xsd:int"/>
  </variables>
  <!--faultHandlers>
    <catch faultName="bpws:selectionFailure" faultVariable="CacheFault">
      <sequence name="Sequence1">
        <assign name="AssignErrorResponse">
          <copy>
            <from expression="concat('The Fault Code: ',bpws:getVariableData('CacheFault','code'),' &amp; the Detail is: ',bpws:getVariableData('CacheFault','summary'))"/>
            <to variable="ReplyWithFault_OutputVariable" part="payload"
                query="/client:processResponse/client:result"/>
          </copy>
        </assign>
        <reply name="ReplyWithFault" faultName="bpws:selectionFailure"
               variable="ReplyWithFault_OutputVariable"
               partnerLink="fndintgumsmailpushnotificationivp_client"
               portType="client:FndIntgUMSMailPushNotificationIVP"
               operation="process"/>
      </sequence>
    </catch>
  </faultHandlers-->
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in FndIntgUMSMailPushNotificationIVP.wsdl) -->
    <receive name="receiveInput" partnerLink="fndintgumsmailpushnotificationivp_client" portType="client:FndIntgUMSMailPushNotificationIVP" operation="process" variable="inputVariable" createInstance="yes"/>
    <assign name="AssignBody">
      <copy>
        <from expression="'This is to verify UMS IVP'"/>
        <to variable="InvokeFndIntgUMSMailPushNotification_InputVariable"
            part="body" query="/ns2:message/ns2:payload"/>
      </copy>
      <copy>
        <from expression="0"/>
        <to variable="iCounter"/>
      </copy>
    </assign>
    <assign name="AssignCacheKeyValue">
      <copy bpelx:insertMissingToData="yes">
        <from expression="concat('SOA_FndIntgUMSMail',xp20:current-dateTime())"/>
        <to variable="CacheKeyValue"/>
      </copy>
    </assign>
    <invoke name="InvokeFndIntgUMSMailPushNotification"
            inputVariable="InvokeFndIntgUMSMailPushNotification_InputVariable"
            outputVariable="InvokeFndIntgUMSMailPushNotification_OutputVariable"
            partnerLink="FndIntgUMSMailPushNotification"
            portType="ns1:SendNotification_ptt" operation="SendNotification"
            bpelx:invokeAsDetail="no">
      <bpelx:inputProperty name="jca.ums.comments" variable="CacheKeyValue"/>      
    </invoke>
    <assign name="AssignInsertCacheStatusForPublication">
      <copy>
        <from expression="snibpel:EnterpriseCachePutByCacheName('FNDCache-SOAIVPStatus',bpws:getVariableData('CacheKeyValue'),'PUBLISHED','172800000')"/>
        <to variable="CacheUpdatedValue"/>
      </copy>
    </assign>
    <while name="While" condition="bpws:getVariableData('iCounter')&lt;12">
      <sequence>
        <wait name="WaitForConsumption" for="'PT20S'"/>
        <assign name="AssignGetCacheUpdatedValue">
          <copy>
            <from expression="snibpel:EnterpriseCacheGetByCacheName('FNDCache-SOAIVPStatus',bpws:getVariableData('CacheKeyValue'))"/>
            <to variable="CacheUpdatedValue"/>
          </copy>
        </assign>
        <switch name="Switch1">
          <case condition="bpws:getVariableData('CacheUpdatedValue')='PUBLISHED'">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userLabel">If PUBLISHED</bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <assign name="IncCounter">
              <copy>
                <from expression="bpws:getVariableData('iCounter')+1"/>
                <to variable="iCounter"/>
              </copy>
            </assign>
          </case>
          <otherwise>
            <assign name="BrkLoop">
              <copy>
                <from expression="bpws:getVariableData('iCounter')+15"/>
                <to variable="iCounter"/>
              </copy>
            </assign>
          </otherwise>
        </switch>
      </sequence>
    </while>
    <assign name="AssignResponse">
      <copy>
        <from variable="CacheUpdatedValue"/>
        <to variable="outputVariable" part="payload"
            query="/client:processResponse/client:result"/>
      </copy>
    </assign>
    <!--<switch name="IfCacheValueISUpdated">
      <case condition="xp20:compare(bpws:getVariableData('CacheUpdatedValue'),'CONSUMED')=0"><assign name="AssignResponse"
                                                                                                     xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/">
      <copy>
         <from variable="InvokeFndIntgUMSMailPushNotification_OutputVariable"
               part="body" query="/ns2:response/ns2:MessageId"/>
         <to variable="outputVariable" part="payload"
             query="/client:processResponse/client:result"/>
      </copy>
   </assign></case>
      <otherwise>
        <sequence name="Sequence2">
          <assign name="AssignFault">
            <copy>
              <from expression="ora:getFaultName()"/>
              <to variable="CacheFault" part="code"/>
            </copy>
            <copy>
              <from expression="substring(ora:getFaultAsString(),1,200)"/>
              <to variable="CacheFault" part="summary"/>
            </copy>
          </assign>
          <throw name="ThrowError" faultName="bpws:selectionFailure"
                 faultVariable="CacheFault"/>
        </sequence>
      </otherwise>
    </switch>-->
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="fndintgumsmailpushnotificationivp_client" portType="client:FndIntgUMSMailPushNotificationIVP" operation="process" variable="outputVariable"/>
  </sequence>
</process>