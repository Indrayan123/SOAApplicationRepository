<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Sep 19 07:49:44 CDT 2016
  Author:  f23963
  Type: BPEL 1.1 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="FndIntgHumanTaskSvcInit"
               targetNamespace="http://xmlns.oracle.com/SNIFndIntgIVPServices/FndIntgHumanTaskSvcIVP/FndIntgHumanTaskSvcInit"
               xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:client="http://xmlns.oracle.com/SNIFndIntgIVPServices/FndIntgHumanTaskSvcIVP/FndIntgHumanTaskSvcInit"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:snibpel="http://xmlns.schneider.com/BPEL/sni/foundation/soa/extensions/xpath"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.schneider.com/SNIFndIntgIVPServices/FndIntgHumanTaskSvcIVP/FndIntgHTWrapperIVP"
         xmlns:ns2="http://xmlns.oracle.com/SOA_Application1/FndIntgHumanTaskIVP/FndIntgHumanTaskStatusUpdate"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns3="http://xmlns.schneider.com/EnterpriseObjects/Common/HumanTask/V1"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://xmlns.schneider.com/EnterpriseObjects/Core/Common/V1">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="fndintghumantasksvcinit_client" partnerLinkType="client:FndIntgHumanTaskSvcInit" myRole="FndIntgHumanTaskSvcInitProvider"/>
    <partnerLink name="FndIntgHTWrapperIVP.fndintghtwrapperivp_client"
                 partnerLinkType="ns1:FndIntgHTWrapperIVP"
                 partnerRole="FndIntgHTWrapperIVPProvider"
                 myRole="FndIntgHTWrapperIVPRequester"/>
    <partnerLink name="FndIntgHumanTaskStatusUpdate.fndintghumantaskstatusupdate_client"
                 partnerLinkType="ns2:FndIntgHumanTaskStatusUpdate"
                 partnerRole="FndIntgHumanTaskStatusUpdateProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:FndIntgHumanTaskSvcInitRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:FndIntgHumanTaskSvcInitResponseMessage"/>
    <variable name="InvokeWrapperHT_process_InputVariable"
              messageType="ns1:FndIntgHTWrapperIVPRequestMessage"/>
    <variable name="InvokeTaskUpdateSvc_process_InputVariable"
              messageType="ns2:FndIntgHumanTaskStatusUpdateRequestMessage"/>
    <variable name="keyIdentifier" type="xsd:string"/>
    <variable name="cachestatus" type="xsd:string"/>
    <variable name="sniHeader" element="ns4:SNIHeader"/>
    <variable name="iCounter" type="xsd:int"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in FndIntgHumanTaskSvcInit.wsdl) -->
    <receive name="receiveInput" partnerLink="fndintghumantasksvcinit_client" portType="client:FndIntgHumanTaskSvcInit" operation="process" createInstance="yes"
             variable="inputVariable"/>
    <assign name="PassParameters">
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:Initiator"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:Initiator"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:Assignee"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:Assignee"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:AssigneeFilter"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:AssigneeFilter"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:Owner"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:Owner"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:Title"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:Title"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:CompletionDttm"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:CompletionDttm"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:Category"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:Category"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:KeyData1"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:KeyData1"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:KeyData2"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:KeyData2"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:KeyData3"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:KeyData3"/>
      </copy>
      <copy>
        <from variable="inputVariable" part="payload"
              query="/ns3:HumanTaskRequest/ns3:OccurrenceCount"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:OccurrenceCount"/>
      </copy>
      <copy>
        <from expression="concat('SOA-HumanTask-',xp20:current-dateTime())"/>
        <to variable="InvokeWrapperHT_process_InputVariable" part="payload"
            query="/ns1:HumanTaskRequest/ns1:keyIdentifier"/>
      </copy>
    </assign>
    <assign name="createSNIHeader">
      <copy>
        <from expression="0"/>
        <to variable="iCounter"/>
      </copy>
      <copy>
        <from expression="snibpel:createSNIHeader('IVPHumanTask','IVP','IVPHumanTaskProcess','FndIntgHumanTaskIVP','SOA','')"/>
        <to variable="sniHeader" query="/ns4:SNIHeader"/>
      </copy>
    </assign>
    <invoke name="InvokeWrapperHT" bpelx:invokeAsDetail="no"
            inputVariable="InvokeWrapperHT_process_InputVariable"
            partnerLink="FndIntgHTWrapperIVP.fndintghtwrapperivp_client"
            portType="ns1:FndIntgHTWrapperIVP" operation="process"/>
    <assign name="insertCachestatus">
      <copy>
        <from variable="InvokeWrapperHT_process_InputVariable" part="payload"
              query="/ns1:HumanTaskRequest/ns1:keyIdentifier"/>
        <to variable="keyIdentifier"/>
      </copy>
      <copy>
        <from expression="snibpel:EnterpriseCachePutByCacheName('FNDCache-SOAIVPStatus',bpws:getVariableData('keyIdentifier'), 'Task Created', '172800000')"/>
        <to variable="cachestatus"/>
      </copy>
      <copy>
        <from variable="keyIdentifier"/>
        <to variable="sniHeader" query="/ns4:SNIHeader/ns4:RequestMessageID"/>
      </copy>
    </assign>
    <wait name="Wait" for="'PT5S'"/>
    <assign name="TransformToUpdateStatusInput">
      <bpelx:annotation>
        <bpelx:pattern>transformation</bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from expression="ora:doXSLTransformForDoc('xsl/Transformation_UpdateStatus.xsl', $inputVariable.payload, 'sniHeader', $sniHeader)"/>
        <to variable="InvokeTaskUpdateSvc_process_InputVariable"
            part="payload"/>
      </copy>
    </assign>
    <invoke name="InvokeTaskUpdateSvc" bpelx:invokeAsDetail="no"
            inputVariable="InvokeTaskUpdateSvc_process_InputVariable"
            partnerLink="FndIntgHumanTaskStatusUpdate.fndintghumantaskstatusupdate_client"
            portType="ns2:FndIntgHumanTaskStatusUpdate" operation="process"/><while name="While"
                                                                                    condition="bpws:getVariableData('iCounter')&lt;12"
                                                                                    xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/">
      <sequence>
         <wait name="Waitfor20secs" for="'PT20S'"/>
         <assign name="CheckCacheStatus">
          <copy>
            <from expression="snibpel:EnterpriseCacheGetByCacheName('FNDCache-SOAIVPStatus',bpws:getVariableData('keyIdentifier'))"/>
            <to variable="outputVariable" part="payload"
                query="/ns3:HumanTaskResponse/ns3:ProcessState"/>
          </copy>
        </assign>
         <switch name="Switch1">
            <case condition="(bpws:getVariableData('outputVariable','payload','/ns3:HumanTaskResponse/ns3:ProcessState')='Task Completion Failed') or (bpws:getVariableData('outputVariable','payload','/ns3:HumanTaskResponse/ns3:ProcessState')='Failed To Invoke FndIntgHumanTaskIVP')">
               <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                  <bpelx:general>
                     <bpelx:property name="userLabel">Task completion failed</bpelx:property>
                  </bpelx:general>
               </bpelx:annotation>
               <sequence>
                  <assign name="BreakLoop">
                <copy>
                  <from expression="bpws:getVariableData('iCounter')+15"/>
                  <to variable="iCounter"/>
                </copy>
              </assign>
               </sequence>
            </case>
            <case condition="bpws:getVariableData('outputVariable','payload','/ns3:HumanTaskResponse/ns3:ProcessState')='Task Completed'">
               <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                  <bpelx:general>
                     <bpelx:property name="userLabel">If Task Completed</bpelx:property>
                  </bpelx:general>
               </bpelx:annotation>
               <sequence>
                  <assign name="BreakLoop"
                          xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/">
                <copy>
                  <from expression="bpws:getVariableData('iCounter')+15"/>
                  <to variable="iCounter"/>
                </copy>
              </assign>
               </sequence>
            </case>
            <otherwise>
               <assign name="IncCounter">
              <copy>
                <from expression="bpws:getVariableData('iCounter')+1"/>
                <to variable="iCounter"/>
              </copy>
            </assign>
            </otherwise>
         </switch>
      </sequence>
   </while><!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="fndintghumantasksvcinit_client" portType="client:FndIntgHumanTaskSvcInit" operation="process"
           variable="outputVariable"/>
  </sequence>
</process>