<?xml version="1.0" encoding="UTF-8" ?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!--
           This POM was automatically generated during SOA project creation.           
           This POM relates to this SOA Composite, i.e. the one in this same directory.
           There is another POM in the SOA Application directory which handles
           the whole SOA Application, which may contain additional projects. 
        -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>SNIFndIntgIVPServices</groupId>
  <artifactId>FndIntgBCSLookupIVP</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>sar</packaging>
  <!--
           The parent points to the common SOA parent POM.  That is a special POM that is
           shipped by Oracle as a point of customization (only). You can add default values
           for properties like serverUrl, etc. to the SOA common parent POM, so that you
           do not have to specify them over and over in every project POM.
    -->
  <parent>
    <groupId>SNIFndIntgIVPServices</groupId>
  <artifactId>SNIFndIntgIVPServices</artifactId>
  <version>1.0-SNAPSHOT</version>  
    	
  </parent> 
  <properties>
  <!-- These parameters are used by the compile goal -->
  <scac.input.dir>${project.basedir}</scac.input.dir>
  <!--<scac.output.dir>${project.basedir}/target</scac.output.dir>-->
  <scac.output.dir>${project.basedir}/target</scac.output.dir>
  <scac.input>${scac.input.dir}/composite.xml</scac.input>
  <scac.output>${scac.output.dir}/out.xml</scac.output>
  <scac.error>${scac.output.dir}/error.txt</scac.error>
  <scac.displayLevel>1</scac.displayLevel>
	  
  <!-- if you are using a config plan, uncomment the following line and update to point
             to your config plan -->
  <configplan>${scac.output.dir}/Deployment_cfgplan.xml</configplan>
 
 
  <!-- These parameters are used by the deploy and undeploy goals -->
  <composite.name>${project.artifactId}</composite.name>
  <composite.revision>${FndIntgBCSLookupIVP.Revision}</composite.revision>
  <composite.partition>${FndIntgBCSLookupIVP.Partition}</composite.partition> 
        
  
  <overwrite>true</overwrite>
  <forceDefault>true</forceDefault>
  <regenerateRulebase>false</regenerateRulebase>
  <keepInstancesOnRedeploy>false</keepInstancesOnRedeploy>
 
 
  <!-- These parameters are used by the test goal
         if you are using the sca-test (test) goal, you need to uncomment the following
             line and point it to your jndi.properties file. -->
  <!--<jndi.properties.input>${basedir}/jndi.properties</jndi.properties.input>-->
  <!--<jndiPropertiesInput>${basedir}/jndi.properties</jndiPropertiesInput>-->
  <!--<jndi.properties.input>UNDEFINED</jndi.properties.input>-->
  <scatest.result>${scac.output.dir}/testResult</scatest.result>
  <!--  input is the name of the composite to run test suties against -->
  <input>${project.artifactId}</input>
  <scacInputDir>${scac.input.dir}</scacInputDir>  
 
 
 
 
  <!--<scac.ant.buildfile>${env.MW_HOME}/soa/bin/ant-sca-compile.xml</scac.ant.buildfile>
        <sca.ant.testfile>${env.MW_HOME}/soa/bin/ant-sca-test.xml</sca.ant.testfile>
        -->
 
 
  </properties>
  <build>
    <plugins>	 	
    <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <configuration>
            <encoding>UTF-8</encoding>
        </configuration>
        <executions>         
<execution>
        <id>copy-config-plan</id>
        <phase>package</phase>
        <goals>
          <goal>copy-resources</goal>
        </goals>
        <configuration>
          <outputDirectory>${scac.output.dir}</outputDirectory>
          <resources>         
            <resource>
              <directory>${project.basedir}</directory>
              <includes>
                <include>Deployment_cfgplan.xml</include>
              </includes>
              <filtering>true</filtering>
            </resource>
          </resources>             
        </configuration>           
      </execution>  

        </executions>
    </plugin> 
	   
	  <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${project.basedir}/../ControlFiles/ControlFile.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
	<plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.3</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <ignoreMissingFile>true</ignoreMissingFile>
          <file>${scac.input}</file>
          <xpath>//composite/@revision</xpath>
          <token>^.*$</token>
          <value>${composite.revision}</value>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.oracle.soa.plugin</groupId>
        <artifactId>oracle-soa-plugin</artifactId>
        <version>12.2.1-0-0</version>
        <configuration>
		<target>
		<property name="configPlan" values="${scac.output.dir}/Deployment_cfgplan.xml"/>
		</target>		  
          <compositeName>
            ${project.artifactId}
          </compositeName>
          <composite>
            ${scac.input}
          </composite>
          <sarLocation>
            ${scac.output.dir}/sca_${project.artifactId}_rev${version}.jar
          </sarLocation>
          
          <!-- Note: compositeRevision is needed to package, revision is needed to undeploy -->
          <compositeRevision>
            ${composite.revision}
          </compositeRevision>
          <revision>
            ${composite.revision}
          </revision>
		  <partition>
            ${composite.partition}
          </partition>
          <scacInputDir>
            ${scac.input.dir}
          </scacInputDir>
		  <appHome>${project.basedir}/..</appHome>	
		<scacClassPath>
            ${scac.class.path}
          </scacClassPath>
          <input>
            ${input}
          </input>
		<excludes>
		  <exclude>**/target/*.jar</exclude>
		  </excludes>
        </configuration>
        <!-- extensions=true is needed to use the custom sar packaging type -->
        <extensions>true</extensions>
		<dependencies>   
   <dependency>
    <groupId>com.oracle.soa</groupId>
    <artifactId>orabpel</artifactId>
    <version>12.2.1-0-0</version>      
	<scope>system</scope>
	<systemPath>${oracle_home}/soa/soa/modules/oracle.soa.bpel_11.1.1/orabpel.jar</systemPath>
</dependency>
<dependency>
    <groupId>com.oracle.fmwshare</groupId>
    <artifactId>com.oracle.webservices.fabric-common-api</artifactId>
    <version>12.2.1-0-0</version>      
	<scope>system</scope>
	<systemPath>${oracle_home}/oracle_common/modules/com.oracle.webservices.fabric-common-api.jar</systemPath>
</dependency>
<dependency>
    <groupId>javax.el</groupId>
    <artifactId>javax.el-api</artifactId>
    <version>3.0.0</version>
  </dependency>
   <dependency>
      <groupId>com.oracle.javavm.jrf</groupId>
      <artifactId>ojdbc7_g</artifactId>
      <version>12.1.0-2-1</version>
    </dependency>
  <dependency>
      <groupId>com.oracle.javavm.jrf</groupId>
      <artifactId>oracle.ucp</artifactId>
      <version>12.1.0-2-1</version>
    </dependency>	    
	  <dependency>
    <groupId>SNIFndIntgExtjar</groupId>
    <artifactId>customsniextjar</artifactId>
    <version>1.0</version>    
</dependency>
  </dependencies> 
      </plugin> 
    </plugins>
	
  </build>
 
</project>
